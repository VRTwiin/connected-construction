{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "machine_failure_prediction",
    "name" : "Machine-Failure-Prediction",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "static",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ {
        "url" : "https://cdn.jsdelivr.net/npm/chart.js"
      } ],
      "templateHtml" : "<div class=\"chart-container\">\n    <div class=\"chart-title\">Machine Failure Prediction</div>\n    <canvas id=\"failure-prediction-chart\"></canvas>\n</div>\n",
      "templateCss" : ".chart-container {\n    position: relative;\n    width: 100%;\n    height: 400px;\n    max-width: 600px;\n    margin: auto;\n    padding: 15px;\n    background: #ffffff;\n    border-radius: 10px;\n    border: 2px solid #f0f0f0;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n    text-align: center;\n}\n\n.chart-title {\n    font-size: 1em;\n    font-weight: bold;\n    margin-bottom: 10px;\n    color: #333;\n}\n\n#failure-prediction-chart {\n    width: 100%;\n    height: 350px;\n    margin: 0 auto;\n}\n",
      "controllerScript" : "self.onInit = function() {\n    // Function to load external scripts dynamically\n    function loadScript(url, callback) {\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = url;\n        script.onload = callback;\n        document.head.appendChild(script);\n    }\n\n    // Load Chart.js script dynamically\n    loadScript(\"https://cdn.jsdelivr.net/npm/chart.js\", function() {\n        // Once the script is loaded, create the failure prediction chart\n        createFailurePredictionChart();\n    });\n\n    // Function to create the failure prediction chart\n    function createFailurePredictionChart() {\n        const ctx = document.getElementById('failure-prediction-chart').getContext('2d');\n\n        // Generate random values for current machine condition and predicted failure\n        const currentCondition = [80, 78, 75, 72, 70, 68, 65]; // Current machine condition (in percentage)\n        const predictedFailure = [63, 60, 58, 55, 52, 50]; // Predicted condition values\n\n        // Data for the failure prediction chart\n        const data = {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n            datasets: [\n                {\n                    label: \"Current Condition (%)\",\n                    data: currentCondition,\n                    borderColor: \"#4caf50\",\n                    borderWidth: 3,\n                    tension: 0.4,\n                    fill: false,\n                    pointBackgroundColor: \"#4caf50\",\n                    pointRadius: 5,\n                },\n                {\n                    label: \"Predicted Failure (%)\",\n                    data: [null, null, null, null, null, null, null, ...predictedFailure],\n                    borderColor: \"#ff3d00\",\n                    borderWidth: 3,\n                    borderDash: [10, 5], // Dashed line for prediction\n                    tension: 0.4,\n                    fill: false,\n                    pointBackgroundColor: \"#ff3d00\",\n                    pointRadius: 5,\n                }\n            ]\n        };\n\n        // Create the chart\n        new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        beginAtZero: true,\n                        max: 100,\n                        grid: {\n                            color: \"#e0e0e0\"\n                        },\n                        title: {\n                            display: true,\n                            text: 'Condition (%)',\n                            color: '#333',\n                            font: {\n                                size: 12\n                            }\n                        }\n                    },\n                    x: {\n                        grid: {\n                            display: false\n                        },\n                        title: {\n                            display: true,\n                            text: 'Months',\n                            color: '#333',\n                            font: {\n                                size: 12\n                            }\n                        }\n                    }\n                },\n                plugins: {\n                    legend: {\n                        position: 'top',\n                        labels: {\n                            color: '#333',\n                            font: {\n                                size: 12\n                            }\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        backgroundColor: '#f5f5f5',\n                        titleColor: '#333',\n                        bodyColor: '#333',\n                        borderColor: '#007bff',\n                        borderWidth: 1\n                    }\n                }\n            }\n        });\n    }\n};\n",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"Machine-Failure-Prediction\",\"dropShadow\":true}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "f841ba90-975b-11ef-a3bd-0f61fe9e8422"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "f841ba90-975b-11ef-a3bd-0f61fe9e8422"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}
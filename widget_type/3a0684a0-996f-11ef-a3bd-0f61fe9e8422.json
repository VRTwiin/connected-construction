{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "weather_card",
    "name" : "weather-card",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "static",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<div class=\"weather-widget-card\">\n    <div class=\"card-title\">Weather Impact & Worker Efficiency</div>\n    <div class=\"status\">\n        <div class=\"weather-info\">\n            <img src=\"https://cdn-icons-png.flaticon.com/512/1163/1163661.png\" alt=\"Weather Icon\" class=\"weather-icon\">\n            <div class=\"temperature\">24Â°C</div>\n        </div>\n        <div class=\"info\">\n            <div>Worker Efficiency:</div>\n            <div class=\"efficiency-value\" id=\"workerEfficiency\">85%</div>\n        </div>\n    </div>\n</div>\n",
      "templateCss" : ".weather-widget-card {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 20px;\n    font-family: Arial, sans-serif;\n    background-color: #f2e6ff; /* Light purple */\n    color: #333;\n    border-radius: 15px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    height: 100%;\n}\n\n.card-title {\n    font-size: 20px;\n    font-weight: bold;\n    color: #800080; /* Dark purple */\n    width: 100%;\n    text-align: center;\n    margin-bottom: 15px;\n}\n\n.status {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.weather-info {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n}\n\n.weather-icon {\n    width: 40px;\n    height: auto;\n}\n\n.temperature {\n    font-size: 18px;\n    font-weight: bold;\n}\n\n.info {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n}\n\n.efficiency-value {\n    font-size: 24px;\n    font-weight: bold;\n    color: #ffcc00; /* Yellow */\n}\n",
      "controllerScript" : "self.onInit = function() {\n    // Set the worker efficiency value\n    const workerEfficiency = 85; // Adjust as needed for your use case\n\n    // Update the efficiency value in the widget\n    document.getElementById('workerEfficiency').innerText = workerEfficiency + '%';\n\n    // Optionally, change the color based on the efficiency\n    const efficiencyElement = document.getElementById('workerEfficiency');\n    if (workerEfficiency >= 80) {\n        efficiencyElement.style.color = '#33ff33'; // Green for high efficiency\n    } else if (workerEfficiency >= 60) {\n        efficiencyElement.style.color = '#ffcc00'; // Yellow for moderate efficiency\n    } else {\n        efficiencyElement.style.color = '#ff3333'; // Red for low efficiency\n    }\n};\n",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"weather-card\",\"dropShadow\":true}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "3a0684a0-996f-11ef-a3bd-0f61fe9e8422"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "3a0684a0-996f-11ef-a3bd-0f61fe9e8422"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}
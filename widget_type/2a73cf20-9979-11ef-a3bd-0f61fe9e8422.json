{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "alert_table_widget",
    "name" : "alert-table-widget",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "static",
      "sizeX" : 9.5,
      "sizeY" : 6.5,
      "resources" : [ ],
      "templateHtml" : "<div class=\"alert-table-widget\">\r\n    <h3>Lead Time Alerts</h3>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Date</th>\r\n                <th>Lead Time (%)</th>\r\n                <th>Status</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody id=\"alert-table-body\">\r\n            <!-- Rows will be dynamically added here -->\r\n        </tbody>\r\n    </table>\r\n</div>\r\n",
      "templateCss" : ".alert-table-widget {\r\n    text-align: center;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    background-color: #fff;\r\n    width: 100%;\r\n    font-family: Arial, sans-serif;\r\n}\r\n\r\n.alert-table-widget h3 {\r\n    font-size: 1.2em;\r\n    margin-bottom: 10px;\r\n    color: #333;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n    text-align: center;\r\n}\r\n\r\n.status-on-time {\r\n    color: green;\r\n}\r\n\r\n.status-delayed {\r\n    color: red;\r\n}\r\n",
      "controllerScript" : "self.onInit = function() {\r\n    function addAlertRow(date, leadTime, status) {\r\n        const tableBody = document.getElementById(\"alert-table-body\");\r\n        const row = document.createElement(\"tr\");\r\n\r\n        row.innerHTML = `\r\n            <td>${date}</td>\r\n            <td>${leadTime}%</td>\r\n            <td class=\"${status === 'On Time' ? 'status-on-time' : 'status-delayed'}\">${status}</td>\r\n        `;\r\n        tableBody.appendChild(row);\r\n    }\r\n\r\n    function simulateAlerts() {\r\n        const now = new Date();\r\n        const leadTime = Math.floor(Math.random() * 100);\r\n        const status = leadTime >= 50 ? \"On Time\" : \"Delayed\";\r\n        const date = now.toLocaleDateString();\r\n\r\n        addAlertRow(date, leadTime, status);\r\n    }\r\n\r\n    // Simulate an alert entry every minute for demonstration\r\n    simulateAlerts();\r\n    setInterval(simulateAlerts, 60000); // Update every 1 minute\r\n};\r\n",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"alert-table-widget\",\"dropShadow\":true}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "2a73cf20-9979-11ef-a3bd-0f61fe9e8422"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "2a73cf20-9979-11ef-a3bd-0f61fe9e8422"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}
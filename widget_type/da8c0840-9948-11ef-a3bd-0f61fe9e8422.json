{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "garbage_collection_alarm",
    "name" : "Garbage Collection Alarm",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "static",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<div class=\"alarm-widget\">\r\n    <div class=\"alarm-header\">\r\n        <div class=\"status-light\" id=\"status-light\"></div>\r\n        <h3>Garbage Collection Alarm</h3>\r\n    </div>\r\n    <div class=\"alarm-body\">\r\n        <img src=\"/api/images/public/alarm_icon.png\" alt=\"Alarm Icon\" class=\"alarm-icon\">\r\n        <p id=\"alarm-message\" class=\"alarm-message\">Garbage Collection Needed!</p>\r\n    </div>\r\n</div>\r\n",
      "templateCss" : ".alarm-widget {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-family: Arial, sans-serif;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    border: 2px solid #ccc;\r\n}\r\n\r\n.alarm-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.status-light {\r\n    width: 15px;\r\n    height: 15px;\r\n    border-radius: 50%;\r\n    background-color: red; /* Alarm state */\r\n    box-shadow: 0px 0px 5px 2px rgba(255, 0, 0, 0.6);\r\n}\r\n\r\n.alarm-icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    margin: 10px 0;\r\n}\r\n\r\n.alarm-message {\r\n    font-size: 1.3em;\r\n    color: #D32F2F;\r\n    font-weight: bold;\r\n    margin: 0;\r\n}\r\n\r\n/* Optional: Style for 'All Clear' state */\r\n.status-light.clear {\r\n    background-color: green;\r\n    box-shadow: 0px 0px 5px 2px rgba(0, 255, 0, 0.6);\r\n}\r\n\r\n.alarm-message.clear {\r\n    color: #4CAF50;\r\n    font-weight: normal;\r\n}\r\n",
      "controllerScript" : "self.onInit = function() {\r\n    const alarmMessageElement = document.getElementById(\"alarm-message\");\r\n    const statusLightElement = document.getElementById(\"status-light\");\r\n\r\n    // Simulate an alarm status: \"true\" for alarm, \"false\" for all clear.\r\n    const isAlarm = true; // Change this to false for \"All Clear\" state.\r\n\r\n    if (isAlarm) {\r\n        // Alarm State\r\n        alarmMessageElement.innerText = \"Garbage Collection Needed!\";\r\n        alarmMessageElement.classList.remove(\"clear\");\r\n        statusLightElement.classList.remove(\"clear\");\r\n    } else {\r\n        // All Clear State\r\n        alarmMessageElement.innerText = \"All Clear\";\r\n        alarmMessageElement.classList.add(\"clear\");\r\n        statusLightElement.classList.add(\"clear\");\r\n    }\r\n};\r\n",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"Garbage Collection Alarm\",\"dropShadow\":true}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "da8c0840-9948-11ef-a3bd-0f61fe9e8422"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "da8c0840-9948-11ef-a3bd-0f61fe9e8422"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}